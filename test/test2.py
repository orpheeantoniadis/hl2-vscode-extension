from utime import *
for i in range(150):
    with open('main.py', 'a') as file:
        file.write("hello\n")
    sleep_ms(1000)
    # file.write('#!/usr/bin/env python\n')
    # file.write('# -*- coding: utf-8 -*-\n')
    # file.write('\'\'\'\n')
    # file.write('Test hepiaLight2 board script\n')
    # file.write('\'\'\'\n')
    # file.write('\n')
    # file.write('def arrow(coords, arrow_type=\'LEFT\', color=ROUGE):\n')
    # file.write('    \'\'\'\n')
    # file.write('    Display a minimal arrow at position\n')
    # file.write('\n')
    # file.write('    Parameters :\n')
    # file.write('    coords     (tuple)  : x, y\n')
    # file.write('    arrow_type (string) : can be [\'LEFT\', \'RIGHT\', \'UP\', \'DOWN\']\n')
    # file.write('    color      (int)    : arrow color\n')
    # file.write('    \'\'\'\n')
    # file.write('    if arrow_type.upper() == \'UP\':\n')
    # file.write('        for x in range(3):\n')
    # file.write('            allumer_led(coords[0] + x, coords[1], color)\n')
    # file.write('        allumer_led(coords[0] + 1, coords[1] + 1, color)\n')
    # file.write('    if arrow_type.upper() == \'DOWN\':\n')
    # file.write('        for x in range(3):\n')
    # file.write('            allumer_led(coords[0] + x, coords[1] + 1, color)\n')
    # file.write('        allumer_led(coords[0] + 1, coords[1], color)\n')
    # file.write('    if arrow_type.upper() == \'LEFT\':\n')
    # file.write('        for y in range(3):\n')
    # file.write('            allumer_led(coords[0] + 1, coords[1] + y, color)\n')
    # file.write('        allumer_led(coords[0], coords[1] + 1, color)\n')
    # file.write('    if arrow_type.upper() == \'RIGHT\':\n')
    # file.write('        for y in range(3):\n')
    # file.write('            allumer_led(coords[0], coords[1] + y, color)\n')
    # file.write('        allumer_led(coords[0] + 1, coords[1] + 1, color)\n')
    # file.write('\n')
    # file.write('def blink_screen(blink_count=5, color=ROUGE, interval_sec=0.1):\n')
    # file.write('    \'\'\'\n')
    # file.write('    Blink the screen with specified color\n')
    # file.write('\n')
    # file.write('    Parameters :\n')
    # file.write('    blink_count  (int)   : the number of blinks\n')
    # file.write('    color        (int)   : color of blinking LEDs\n')
    # file.write('    interval_sec (float) : Interval between each blink in seconds\n')
    # file.write('    \'\'\'\n')
    # file.write('    for _ in range(blink_count):\n')
    # file.write('        allumer_tout(color)\n')
    # file.write('        delai(interval_sec)\n')
    # file.write('        eteindre_tout()\n')
    # file.write('        delai(interval_sec)\n')
    # file.write('\n')
    # file.write('def test_matrix():\n')
    # file.write('    \'\'\'\n')
    # file.write('    Turn all LEDs on, with red then green then blue\n')
    # file.write('    \'\'\'\n')
    # file.write('    colors = [ROUGE, VERT, BLEU]\n')
    # file.write('    for color in colors:\n')
    # file.write('        allumer_tout(color)\n')
    # file.write('        delai(1)\n')
    # file.write('\n')
    # file.write('def test_touch():\n')
    # file.write('    \'\'\'\n')
    # file.write('    Press the red arrows until all four become green\n')
    # file.write('    \'\'\'\n')
    # file.write('    arrow((1, 1), \'UP\', ROUGE)\n')
    # file.write('    arrow((1, 7), \'UP\', ROUGE)\n')
    # file.write('    arrow((6, 1), \'UP\', ROUGE)\n')
    # file.write('    arrow((6, 7), \'UP\', ROUGE)\n')
    # file.write('    count = [0] * 4\n')
    # file.write('    while sum(count) < 4:\n')
    # file.write('        if touche_sud_ouest():\n')
    # file.write('            arrow((1, 1), \'UP\', VERT)\n')
    # file.write('            count[0] = 1\n')
    # file.write('        if touche_sud_est():\n')
    # file.write('            arrow((6, 1), \'UP\', VERT)\n')
    # file.write('            count[1] = 1\n')
    # file.write('        if touche_nord_ouest():\n')
    # file.write('            arrow((1, 7), \'UP\', VERT)\n')
    # file.write('            count[2] = 1\n')
    # file.write('        if touche_nord_est():\n')
    # file.write('            arrow((6, 7), \'UP\', VERT)\n')
    # file.write('            count[3] = 1\n')
    # file.write('    blink_screen(color=VERT)\n')
    # file.write('\n')
    # file.write('def test_uart():\n')
    # file.write('    \'\'\'\n')
    # file.write('    Connect an hepialight in each direction to turn all arrows green\n')
    # file.write('    \'\'\'\n')
    # file.write('    eteindre_tout()\n')
    # file.write('    arrow((1, 3), \'LEFT\', ROUGE)\n')
    # file.write('    arrow((8, 3), \'RIGHT\', ROUGE)\n')
    # file.write('    arrow((4, 7), \'UP\', ROUGE)\n')
    # file.write('    arrow((4, 1), \'DOWN\', ROUGE)\n')
    # file.write('    count = [0] * 4\n')
    # file.write('    while sum(count) < 4:\n')
    # file.write('        envoyer_msg(NORD, \'P\')\n')
    # file.write('        envoyer_msg(SUD, \'P\')\n')
    # file.write('        envoyer_msg(EST, \'P\')\n')
    # file.write('        envoyer_msg(OUEST, \'P\')\n')
    # file.write('\n')
    # file.write('        if recevoir_msg(NORD) == \'P\':\n')
    # file.write('            arrow((4, 7), \'UP\', VERT)\n')
    # file.write('            count[0] = 1\n')
    # file.write('        if recevoir_msg(SUD) == \'P\':\n')
    # file.write('            arrow((4, 1), \'DOWN\', VERT)\n')
    # file.write('            count[1] = 1\n')
    # file.write('        if recevoir_msg(EST) == \'P\':\n')
    # file.write('            arrow((8, 3), \'RIGHT\', VERT)\n')
    # file.write('            count[2] = 1\n')
    # file.write('        if recevoir_msg(OUEST) == \'P\':\n')
    # file.write('            arrow((1, 3), \'LEFT\', VERT)\n')
    # file.write('            count[3] = 1\n')
    # file.write('            \n')
    # file.write('        delai(0.5)\n')
    # file.write('    blink_screen(color=VERT)\n')
    # file.write('\n')
    # file.write('def test_accel():\n')
    # file.write('    \'\'\'Tilt the board in the reds arrows directions until they become green\n')
    # file.write('    \'\'\'\n')
    # file.write('    eteindre_tout()\n')
    # file.write('    arrow((1, 3), \'LEFT\', ROUGE)\n')
    # file.write('    arrow((8, 3), \'RIGHT\', ROUGE)\n')
    # file.write('    arrow((4, 7), \'UP\', ROUGE)\n')
    # file.write('    arrow((4, 1), \'DOWN\', ROUGE)\n')
    # file.write('    counter_max = 8\n')
    # file.write('    up, down, left, right = 0, 0, 0, 0\n')
    # file.write('    while up + down + left + right < 4 * counter_max - 1:\n')
    # file.write('        if penche_gauche():\n')
    # file.write('            left = left + 1 if left < counter_max else counter_max\n')
    # file.write('        if penche_droite():\n')
    # file.write('            right = right + 1 if right < counter_max else counter_max\n')
    # file.write('        if penche_avant():\n')
    # file.write('            up = up + 1 if up < counter_max else counter_max\n')
    # file.write('        if penche_arriere():\n')
    # file.write('            down = down + 1 if down < counter_max else counter_max\n')
    # file.write('        if left >= counter_max:\n')
    # file.write('            arrow((1, 3), \'LEFT\', VERT)\n')
    # file.write('        if right >= counter_max:\n')
    # file.write('            arrow((8, 3), \'RIGHT\', VERT)\n')
    # file.write('        if up >= counter_max:\n')
    # file.write('            arrow((4, 7), \'UP\', VERT)\n')
    # file.write('        if down >= counter_max:\n')
    # file.write('            arrow((4, 1), \'DOWN\', VERT)\n')
    # file.write('        delai(0.1)\n')
    # file.write('    blink_screen(color=VERT)\n')
    # file.write('\n')
    # file.write('\n')
    # file.write('if __name__ == \'__main__\':\n')
    # file.write('    test_matrix()\n')
    # file.write('    eteindre_tout()\n')
    # file.write('    test_touch()\n')
    # file.write('    eteindre_tout()\n')
    # file.write('    test_accel()\n')
    # file.write('    eteindre_tout()\n')
    # file.write('\n')
